apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../ktlint.gradle'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.00"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            consumerProguardFiles 'consumer-rules.pro'
        }
    }
}

check.dependsOn ktlint

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptorVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation project(':commonlibrary')

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    testImplementation "com.google.truth:truth:$googletruthVersion"

    testImplementation "androidx.test:core:$xcoreVersion"
    testImplementation "androidx.test.ext:junit:$extJunitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

   // testImplementation "androidx.arch.core:core-testing:$archcoreTestingVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserverVersion"

    testImplementation project(':shared-test')

    androidTestImplementation "androidx.test.ext:junit:$extJunitVersion"
    androidTestImplementation "androidx.test:core:$xcoreVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    androidTestImplementation "androidx.test.ext:truth:$androidxtruthVersion"
    androidTestImplementation "com.google.truth:truth:$googletruthVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    androidTestImplementation "androidx.arch.core:core-testing:$archcoreTestingVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    androidTestImplementation "androidx.fragment:fragment-testing:$fragmenttestVersion"

    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    androidTestImplementation project(':shared-test')
}

// we need all open to run tests which  a we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}
